{"version":3,"file":"AbstractFormatter.js","sourceRoot":"","sources":["AbstractFormatter.ts"],"names":[],"mappings":";;;AAEA,MAAsB,iBAAiB;IAGzB,OAAO,CAAC,IAAU;QACxB,OAAO,IAAI;aACN,WAAW,EAAE;aACb,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;aACjB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC1B,CAAC;IAES,mBAAmB;QACzB,MAAM,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;QAC3B,OAAO,CAAC,GAAG,EAAE,KAAK,EAAO,EAAE;YACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;gBAC7C,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACjB,OAAO;iBACV;gBACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACnB;YACD,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC;IACN,CAAC;CACJ;AAtBD,8CAsBC","sourcesContent":["import { MessageEntity } from '../Entities/MessageEntity';\n\nexport abstract class AbstractFormatter {\n    public abstract format(item: MessageEntity): string;\n\n    protected getTime(date: Date): string {\n        return date\n            .toISOString()\n            .replace(/T/, ' ')\n            .replace(/Z/, '');\n    }\n\n    protected getCircularReplacer(): any {\n        const seen = new WeakSet();\n        return (key, value): any => {\n            if (typeof value === 'object' && value !== null) {\n                if (seen.has(value)) {\n                    return;\n                }\n                seen.add(value);\n            }\n            return value;\n        };\n    }\n}\n"]}