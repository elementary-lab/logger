{"version":3,"file":"JsonFormatter.js","sourceRoot":"","sources":["JsonFormatter.ts"],"names":[],"mappings":";;;AAAA,2DAAwD;AACxD,0CAAgD;AAGhD,MAAa,aAAc,SAAQ,qCAAiB;IACzC,MAAM,CAAC,IAAmB;QAC7B,OAAO,IAAI,CAAC,SAAS,CACjB;YACI,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,KAAK,EAAE,sBAAc,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAClE,EACD,IAAI,EACJ,CAAC,CACJ,CAAC;IACN,CAAC;CACJ;AAbD,sCAaC","sourcesContent":["import { AbstractFormatter } from './AbstractFormatter';\nimport { LogLevelString } from '../Types/index';\nimport { MessageEntity } from '../Entities/MessageEntity';\n\nexport class JsonFormatter extends AbstractFormatter {\n    public format(item: MessageEntity): string {\n        return JSON.stringify(\n            {\n                date: this.getTime(item.time),\n                level: LogLevelString[item.level],\n                category: item.category,\n                userData: JSON.stringify(item.data, this.getCircularReplacer())\n            },\n            null,\n            0\n        );\n    }\n}\n"]}